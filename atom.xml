<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://chongming7406.github.io/lml.github.io</id>
    <title>冲鸣</title>
    <updated>2020-12-14T18:53:31.354Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://chongming7406.github.io/lml.github.io"/>
    <link rel="self" href="https://chongming7406.github.io/lml.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://chongming7406.github.io/lml.github.io/images/avatar.png</logo>
    <icon>https://chongming7406.github.io/lml.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 冲鸣</rights>
    <entry>
        <title type="html"><![CDATA[Houdini程序化建模入门教程指南]]></title>
        <id>https://chongming7406.github.io/lml.github.io/post/houdini-cheng-xu-hua-jian-mo-ru-men-jiao-cheng-zhi-nan/</id>
        <link href="https://chongming7406.github.io/lml.github.io/post/houdini-cheng-xu-hua-jian-mo-ru-men-jiao-cheng-zhi-nan/">
        </link>
        <updated>2020-12-14T18:51:07.000Z</updated>
        <content type="html"><![CDATA[<p><em>摘自 Bilibili：o橘柚o</em></p>
<h1 id="一-入门基础知识">一、入门基础知识</h1>
<p>①Houdini18官方入门教程<br>
https://www.bilibili.com/video/av77323910</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[特效]使用MeshData制作近战刀光特效详细步骤]]></title>
        <id>https://chongming7406.github.io/lml.github.io/post/te-xiao-shi-yong-meshdata-zhi-zuo-jin-zhan-dao-guang-te-xiao-xiang-xi-bu-zou/</id>
        <link href="https://chongming7406.github.io/lml.github.io/post/te-xiao-shi-yong-meshdata-zhi-zuo-jin-zhan-dao-guang-te-xiao-xiang-xi-bu-zou/">
        </link>
        <updated>2020-12-14T15:24:33.000Z</updated>
        <content type="html"><![CDATA[<h1 id="思路总览">思路总览：</h1>
<p>使用圆环型片状Mesh制作主体刀光部分，材质部分需要流动Panner、溶解Dissolve和折射Ref效果。贴图选用单色贴图单通道，在材质中连入Particle Color，在粒子编辑器中使用Particle Color控制颜色。</p>
<h1 id="materials">Materials：</h1>
<h2 id="11暗色主体刀光">1.1暗色主体刀光</h2>
<ul>
<li>Panner：Panner两张贴图，一张Base_Tex，一张Dissolve_Tex，相乘</li>
<li>用if节点实现Dissolve，贴图单通道R乘以dynamic parameter的DP0 输入A，DP2输入B，在particle中取其中一个值进行K曲线来控制溶解。</li>
<li>DP2控制折射强度。</li>
</ul>
<h2 id="12亮色主体刀光">1.2亮色主体刀光</h2>
<ul>
<li>不需要折射和法线</li>
<li>替换BaseTex为更犀利的贴图</li>
</ul>
<figure data-type="image" tabindex="1"><img src="https://chongming7406.github.io/lml.github.io/post-images/1607963220849.png" alt="" loading="lazy"></figure>
<h1 id="particle-system">Particle System：</h1>
<h2 id="21-particle-emitter的module设置">2.1 Particle Emitter的Module设置：</h2>
<ul>
<li>主体刀光结构分两层，暗色层永远放在最左边，最先被渲染。亮色层在右边。</li>
<li>Mesh Data：圆环形片状Mesh，勾选Override Material</li>
<li>调整Life Time匹配两层节奏</li>
<li>Spawn：Burst 1个粒子</li>
<li>Duration：Emitter Loops：1</li>
<li>Init Mesh Roatation和Init Mesh Roatation Rata控制模型旋转，只给z轴一个固定值。加一个Mesh Roatation Rata*Life ，K曲线控制随着生命的旋转速度。</li>
<li>Dynamic</li>
<li>颜色控制：为了增强暗色效果，取消clamp alpha，将alpha值调大。亮色部分用initial color和scale color/life 控制。</li>
</ul>
<h1 id="about-animation">About Animation：</h1>
<ul>
<li><strong>在什么情况下使用Mesh Data制作刀光效果？</strong><br>
在动作动画不完美的情况下，使用这个方法制作刀光，可以更圆润，更适合卡通效果。</li>
<li><strong>添加动画通知</strong><br>
在根骨骼Root 上添加Socket，调整位置，在动画通知添加Play Particle Effect，选择正确的Socket。此方法的特效时间需在Particle System里的Life Time调整。</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【游戏设计】技能系统]]></title>
        <id>https://chongming7406.github.io/lml.github.io/post/you-xi-she-ji-ji-neng-xi-tong2/</id>
        <link href="https://chongming7406.github.io/lml.github.io/post/you-xi-she-ji-ji-neng-xi-tong2/">
        </link>
        <updated>2020-12-14T11:34:12.000Z</updated>
        <content type="html"><![CDATA[<h1 id="一-总览">一、总览</h1>
<ul>
<li><strong>天赋技能</strong>：多为被动效果，如使用某种武器/装备时获得ｘ加成；处于Ｘ环境下获得Ｘ加成；天赋异禀，拥有两套主动技能，可进行切换。</li>
<li><strong>普通攻击</strong>：Normal_Attack。根据不同的武器类型，会有不同的普通攻击模式，例如刀/剑，枪/弓，法杖，等。不局限于传统RPG游戏的传统职业，还包含使用枪剑（左手枪右手剑）、镰刀等武器的职业。一般由3~4个动作组成一个Combo。不产生任何消耗。</li>
<li><strong>特殊攻击</strong>：Special_Attack。根据不同的武器类型施展的强力攻击，一般只有一个动作。具有更高的伤害或其他特殊效果，会产生少量消耗HP、MP、怒气等。</li>
<li><strong>普攻技能</strong>：SkillQ；SkillE 均为主动技能，分为控制型技能，伤害型技能，治疗技能，BUFF技能，召唤型技能和混合型技能等。每种又分为单体技能，限定数量技能，范围型技能等。技能释放（Spawn）过程分为瞬间释放和延迟释放（Delay，Timeline控制）。释放技能会产生一定消耗。有冷却时间。</li>
<li><strong>终极技能</strong>：SkillR 更加强大的主动技能，包含更多的元素，如变身技能等。造成的效果更高。释放技能产生的消耗更高，有更长的冷却时间。</li>
</ul>
<h1 id="二-技能类型">二、技能类型</h1>
<h2 id="技能类型的分类">技能类型的分类</h2>
<ul>
<li><strong>普通伤害</strong>：主要伤害来源。单体伤害，范围伤害。</li>
<li><strong>特殊伤害</strong>：造成伤害的同时伴随其他减益效果。持续伤害为：中毒，流血，灼烧。</li>
<li><strong>治疗</strong>：恢复HP,恢复MP。分为单次恢复，持续恢复。单体恢复，范围恢复。</li>
<li><strong>增益效果</strong>：增加自身攻击力，速度，防御抗性，属性伤害等。</li>
<li><strong>减益效果</strong>：减攻，减速，减防/抗，减疗。</li>
<li><strong>控制</strong>：沉默，眩晕，冰冻，嘲讽</li>
<li><strong>护盾</strong>：护盾加防，抵消伤害。</li>
</ul>
<h2 id="特殊的技能类型">特殊的技能类型</h2>
<ul>
<li>驱散自身Debuff，驱散敌人Buff。</li>
<li>复活（死亡后触发），死战（1滴血触发不死，持续x时间）</li>
<li>伤害免疫</li>
<li>闪避与命中</li>
</ul>
<p>##属性伤害及元素反应机制</p>
<p>光属性：<br>
冰属性：<br>
风属性：<br>
火属性：<br>
毒：<br>
次元：</p>
<h1 id="三-近战与远程分析">三、近战与远程分析</h1>
<h2 id="近战实现思路">近战实现思路</h2>
<h3 id="特效">特效：</h3>
<ul>
<li>TrailData</li>
<li>MeshData 环形片</li>
</ul>
<h3 id="检测">检测：</h3>
<ul>
<li>在武器上加插槽，然后通过状态通知，通知的Tick事件以上一帧的插槽位置作起点，以目前的插槽位置作终点做射线检测。</li>
</ul>
<h2 id="远程实现思路">远程实现思路</h2>
<p>释放Actor/Bullet碰撞体</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[游戏策划书]游戏名称暂定《冲鸣》]]></title>
        <id>https://chongming7406.github.io/lml.github.io/post/you-xi-ce-hua-shu-you-xi-ming-cheng-wei-ding/</id>
        <link href="https://chongming7406.github.io/lml.github.io/post/you-xi-ce-hua-shu-you-xi-ming-cheng-wei-ding/">
        </link>
        <updated>2020-12-13T09:12:14.000Z</updated>
        <content type="html"><![CDATA[<p><font size=3 ><em>前言：接触UE4快一年时间，多以美术学习为主，为了增加学习动力，制作一款独立游戏并发布，特此立项，希望知识和经济双收。</em></p>
<h1 id="font-size5-一-游戏概述"><font size=5 > 一、游戏概述</h1>
<h2 id="font-size4-11游戏概述"><font size=4 ><strong>1.1游戏概述</strong></h2>
<p><em>3D上帝视角角色扮演单机游戏</em></p>
<ul>
<li>游戏名称：冲鸣（暂定）</li>
<li>运行环境：PC</li>
<li>发布平台：Steam，Epic等</li>
<li>游戏引擎：UE4（纯蓝图或少量C++）</li>
<li>游戏类型：ARPG（参考：暗黑破坏神3，火炬之光2）</li>
<li>玩家人数：单机单人</li>
<li>游戏视角：Topdown（上帝视角）</li>
<li>画面类型：3D</li>
<li>美术风格：NPR 概念美术风格（参考：无主之地3）</li>
</ul>
<p>该游戏是一款使用UE4引擎打造ARPG单机游戏。故事发生在另一个宇宙（架空世界观），玩家将以外来者的身份进行探索成长，并获得更多的角色加入队伍。玩家可以在游戏中体验到冒险、刷宝、解谜、收集、挑战等内容。</p>
<h2 id="font-size4-12游戏特色"><font size=4 ><strong>1.2游戏特色</strong></h2>
<ul>
<li>与传统RPG游戏不同，玩家并非从头到尾养成一个角色，而是随着游戏的进行解锁更多的角色，在游戏中控制一个最多4人的小队进行战斗，但每次只能上场一个角色，可在战斗中进行切换。（参考：原神）</li>
<li>拥有属性攻击元素反应机制，属性克制机制。</li>
<li>与时俱进的装备系统，加入神话装备，神话装备设计概念来自古代神话传说或真实世界，增加代入感和可信度。</li>
<li>采用卡通渲染模式，在有粗细变化的轮廓线的同时保留写实的材质，从而产生一种概念美术的风格。（参考：无主之地3）</li>
<li>除了探索大地图之外，还可以进行副本挑战（Roguelike元素）。</li>
</ul>
<h2 id="font-size4-13游戏定位"><font size=4 ><strong>1.3游戏定位</strong></h2>
<font color=#778899>
<ul>
<li>定位游戏的用户群体</li>
<li>预计这个游戏的玩家的游戏时间多少能达到终极目的</li>
</ul>
<h2 id="font-size4-14游戏风格"><font size=4 ><strong>1.4游戏风格</strong></h2>
<p>包括游戏画面效果和音乐音效等要素，这些是玩家对游戏的直观感受，是设计的基础。</p>
<h1 id="font-size5-二-游戏机制"><font size=5 > 二、游戏机制</h1>
<p>（游戏机制部分是整个文档中最详细的地方，这部分要描述在游戏中玩家可以做什么，他们怎样做和如何产生激发兴趣的游戏体验。）</p>
<h2 id="font-size4-21游戏性设计"><font size=4 ><strong>2.1游戏性设计</strong></h2>
<p>（操作的乐趣。可涉及准确的反应速度、恰到好处的动作幅度、好的节奏感、操作后的联动反应、快捷键的设置等。探索和挖掘的乐趣。可涉及扫地图的乐趣、特殊对抗的乐趣、发掘游戏规律的乐趣等。研究和练习的乐趣。可涉及游戏系统的研究、阵型装备的研究、版面迷题的研究、练习的乐趣以及其他乐趣等。）</p>
<h2 id="font-size4-22游戏玩法和规则"><font size=4 ><strong>2.2游戏玩法和规则</strong></h2>
<p>（描述玩家如何指挥游戏，说明游戏的运动模式。如果游戏开始于玩家创建他的角色，则需要描述这个过程；如果玩家要在不同模式间转换，那么每种模式都应当进行详细论述。）</p>
<h2 id="font-size4-23游戏界面gui主界面和游戏开始界面"><font size=4 ><strong>2.3游戏界面GUI（主界面和游戏开始界面）</strong></h2>
<p>玩家如何看游戏是游戏设计的中心环节。描述玩家玩游戏时所见到的景象，这包括玩家如何看这个环境、使用什么样的镜头角度、玩家如何影响镜头的位置。同时，还需要描写用户在游戏中与游戏操控有关的图形用户界面（GUI）。</p>
<h1 id="font-size5-三-游戏元素"><font size=5 > 三、游戏元素</h1>
<h2 id="font-size4-31游戏角色"><font size=4 ><strong>3.1游戏角色</strong></h2>
<h3 id="font-size3-311玩家可操控角色player"><font size=3 >3.1.1玩家可操控角色Player</h3>
<h4 id="font-size3-3111基础属性"><font size=3 >3.1.1.1基础属性</h4>
<ul>
<li>生命值</li>
<li>法力值</li>
<li>速度（包括移动速度，攻击速度，施法速度，动画播放速度）</li>
<li>防御</li>
<li>抗性</li>
</ul>
<h4 id="font-size3-3112战斗属性"><font size=3 >3.1.1.2战斗属性</h4>
<ul>
<li>攻击力</li>
<li>攻击范围</li>
<li>暴击率</li>
<li>暴击伤害</li>
<li>属性攻击</li>
<li>属性伤害</li>
<li>技能冷却</li>
<li>冷却缩减</li>
</ul>
<h4 id="font-size3-3113技能"><font size=3 >3.1.1.3技能</h4>
<ul>
<li>普通攻击：点按</li>
<li>重击：长按</li>
<li>1个天赋技能/被动</li>
<li>2个普通技能/主动：QE</li>
<li>1个终极技能/主动：R</li>
</ul>
<h3 id="font-size3-312npc"><font size=3 >3.1.2NPC</h3>
<h3 id="font-size3-313敌对角色"><font size=3 >3.1.3敌对角色</h3>
<h2 id="font-size4-32物品"><font size=4 ><strong>3.2物品</strong></h2>
<h3 id="font-size4-321武器-装备-特殊装备"><font size=4 >3.2.1武器、装备、特殊装备</h3>
<h3 id="font-size4-322消耗品"><font size=4 >3.2.2消耗品</h3>
<h3 id="font-size4-323材料"><font size=4 >3.2.3材料</h3>
<h3 id="font-size4-324对象"><font size=4 >3.2.4对象</h3>
<h2 id="font-size4-33货币"><font size=4 ><strong>3.3货币</strong></h2>
<h1 id="font-size5-四-游戏系统"><font size=5 >四、游戏系统</h1>
<h2 id="font-size4-41属性系统"><font size=4 ><strong>4.1属性系统</strong></h2>
<h3 id="font-size4-411角色基础属性系统"><font size=4 >4.1.1角色基础属性系统</h3>
<p>1.当前生命值<br>
2.最大生命值<br>
3.当前魔法值<br>
4.最大魔法值<br>
5.伤害基数<br>
6.攻击速度<br>
7.攻击距离<br>
8.受伤<br>
9.死亡</p>
<h3 id="font-size4-412怪物属性系统"><font size=4 >4.1.2怪物属性系统</h3>
<h3 id="font-size4-413物品属性系统"><font size=4 >4.1.3物品属性系统</h3>
<h2 id="font-size4-42战斗系统"><font size=4 ><strong>4.2战斗系统</strong></h2>
<h2 id="font-size4-43技能系统"><font size=4 ><strong>4.3技能系统</strong></h2>
<h2 id="font-size4-44伤害机制系统"><font size=4 ><strong>4.4伤害机制系统</strong></h2>
<h2 id="font-size4-45ai系统"><font size=4 ><strong>4.5AI系统</strong></h2>
<h2 id="font-size4-46奖励系统"><font size=4 ><strong>4.6奖励系统</strong></h2>
<h3 id="font-size4-461野外战斗奖励系统"><font size=4 >4.6.1野外战斗奖励系统</h3>
<h3 id="font-size4-462副本战斗奖励系统"><font size=4 >4.6.2副本战斗奖励系统</h3>
<h3 id="font-size4-463其他奖励系统"><font size=4 >4.6.3其他奖励系统</h3>
<h2 id="font-size4-47装备系统"><font size=4 ><strong>4.7装备系统</strong></h2>
<h2 id="font-size4-48物品系统"><font size=4 ><strong>4.8物品系统</strong></h2>
<h2 id="font-size4-49背包系统"><font size=4 ><strong>4.9背包系统</strong></h2>
<h2 id="font-size4-410货币系统"><font size=4 ><strong>4.10货币系统</strong></h2>
<h2 id="font-size4-411商店系统"><font size=4 ><strong>4.11商店系统</strong></h2>
<h2 id="font-size4-412交互操作系统gui"><font size=4 ><strong>4.12交互/操作系统GUI</strong></h2>
<h1 id="font-size5-五-游戏程序ue4"><font size=5 >五、游戏程序/UE4</h1>
<p><em>基于纯蓝图demo开发，使用UE4自带模块和虚幻商城插件。</em></p>
<h2 id="font-size4-51ue4的gamepaly框架"><font size=4 ><strong>5.1UE4的Gamepaly框架</strong></h2>
<h3 id="font-size4-511gamemode"><font size=4 >5.1.1GameMode</h3>
<p>游戏框架的基础是GameMode。GameMode设置了游戏的规则，也处理players的生成。Player在PlayerController中设置，PlayerController可以拥有一个Pawn，Pawn是一个游戏中Player可操作的对象（物理上的代表），当Controller拥有这个Pawn，并且可以为其行为设置规则。Character类（Pawn的一个特殊子类）中有已经封装好的移动功能组件Character Movement Component，包含跑跳等常规动作。<br>
你可以在Pawn中设计自己的移动逻辑或其他游戏逻辑，这些功能也可以在Controller中设计。一个Controller可以是从人类玩家获得输入的PlayerController，也可以是由电脑自动控制的AIController。</p>
<h3 id="font-size4-512游戏框架参考"><font size=4 >5.1.2游戏框架参考</h3>
<ul>
<li>Controller是一个负责指导Pawn的Actor。它们通常有两种版本，AIController和PlayerController。控制器可以“拥有”一个Pawn来控制它。</li>
<li>PlayerController是Pawn与玩家控制他之间的接口。其代表了玩家的意志。</li>
<li>AIController是一个可以控制Pawn的模拟意志。</li>
<li>Pawn是一个actor。Pawn可以被Controller持有，他们可以接收输入，可以做很多游戏逻辑。</li>
<li>Character是一个人形风格的Pawn，继承自Pawn。他默认自带一个胶囊体碰撞器和角色运动组件。他可以做到基本的人形移动，他可以平滑的复制移动并且有一些动画相关的功能。</li>
<li>HUD是一个抬头显示器。可以显示健康、弹药等，每个PlayerController通常有一个。</li>
<li>Camera相当于玩家的眼球并且管理他的行为。每个PlayerController通常也有其中一个。</li>
<li>GameState游戏状态。记录游戏的数据，比如当前游戏的进度，世界任务的完成状态等。</li>
<li>PlayerState玩家状态。记录玩家个人的数据，比如名字分数等。</li>
</ul>
<h2 id="font-size4-52属性系统"><font size=4 ><strong>5.2属性系统</strong></h2>
<h2 id="font-size4-53人物状态机系统"><font size=4 ><strong>5.3人物状态机系统</strong></h2>
<p>这个系统十分复杂，也是所有系统得以运行的基础。这个系统标志着人物目前处于一个什么样的情况中。<br>
　　相对于动作而言，人物是站立中？还是跑动中？还是对人对持中？还是在施放魔法中？还是在施展技能中？当然，有些状态是可以同时拥有的，比如说站立和施法，有些是不能同时拥有的，比如说站立和走动，这在程序中需要用不同的变量来区分。<br>
　　相对于剧情而言，人物现在是接受了这个任务吗？没有接受任务吗？或是完成了吗？如果任务不止一步，人物进行到哪一步了？每个任务都要用不同的状态机来保存。<br>
　　相对于属性而言，人物现在是中毒吗？没有中毒吗？人物现在可以移动吗？可以以正常速度移动吗？人物现在可以施展技能吗？可以施展哪些技能？<br>
　　主角目前身上有什么物品（任务，或是非任务物品），身上有什么装备，曾经去过哪些地方，杀死过哪些怪物，和哪些人对过话，这些东西都是需要状态机来表示的，因为脚本系统需要这些状态机来进行判断。当然，这其中有些状态机不需要事先设定，而是等需要的时候才计算。比如说物品状态机，在需要的时候给定一个物品的代号，然后状态机系统就可以给出角色是否拥有这个物品，拥有多少个之类。<br>
　　在这里有一点关键性的东西，游戏程序中的状态机和游戏设计中的状态不是一一对应的，比如说，游戏设计中有“麻痹”这一状态，但是状态机中却不一定有（当然，状态机是人设计的，你要设计一个这样的状态也是可以的），而是用“移动：否”、“动作：否”这两个状态机来表示。<br>
　　当然还有许多许多的状态机情况，游戏的规则越复杂，所需要的状态机就越多，状态机系统也越复杂。因为各个状态之间也是相互关联的。状态机系统之所以重要，是因为周围世界中所发生的一切行为都是以人物处于何种状态而决定的。</p>
<h2 id="font-size4-54行为系统"><font size=4 ><strong>5.4行为系统</strong></h2>
<p><em>这个系统决定了游戏的表演方式，也与图形引擎和声音引擎挂钩。当人物（或是怪物）发出一个动作之后，这个动作要怎么表示？比如说攻击，虽然在角色发动攻击的一瞬间，攻击是否命中，目标会受到多少伤害，这个已经被计算好了，但是不可能角色的刀子一举起来，怪物就作出受伤的动作并且惨叫一声，而是角色的攻击动作到达某一个阶段（程序上来说就是哪一帧）的时候，怪物才作出受伤的动作。</em><br>
<em>而且，还有许多不是在动作启动时就可以做出计算的，而是在碰撞检测之后才决定的（可以是物理，或是非物理的）。比如说弓箭、飞弹类型的魔法、攻击范围会渐渐变化的魔法（例如火环），追尾型的飞弹之类，这些东西的进行方式都是行为系统来控制，而非脚本系统（以下会介绍）来控制。以火环为例，它从发动到结束共有多少帧？每帧会产生什么样的变化？它影响的区域会怎么样变化？</em><br>
<em>不同的事物可以用不同的行为系统，但也可以共用同一个行为系统，比如说冰环和火环，虽然他们的渲染和伤害计算是不同的，但是他们的行为是一样的。</em><br>
<em>又比如说死亡的动作。如果死亡就只有一种表现形式，那么关于死亡的行为系统也不复杂，但是有多种死亡动作呢？比如说向前倒下、向后倒下、软倒（直立着跪下那种），如果是从正面受到攻击，那么向后倒下才符合情况，而用先前倒就不真实了。或者是向后倒之后，再加上一定程度的移动，就可以造成“吹飞”（被人打出去很远）的效果。那么判断何时使用哪种动作，就是行为系统的部份。</em><br>
<em>当然，人物行为所造成的影响的计算也是这个系统的功能。分析人物目前的状态，决定使用哪一个公式来计算影响，动作是否成功（例如命中之类），人物/怪物受到影响之后会产生什么样的动作（当然不是指怪物的决策行为的这种关于AI的部份，是指如果生命降到0就要执行死亡动作这一类）也是行为系统的部份。</em></p>
<h2 id="font-size4-55脚本系统"><font size=4 ><strong>5.5脚本系统</strong></h2>
<p>这是构成精彩世界的重要组成部份。一个好的脚本系统几乎可以操作游戏世界中的一切（什么？你说脚本不能控制用户的菜单？那如果你的游戏中要做一个给初学者的教学演示呢？）。在以剧情为重的RPG中，脚本系统将是十分复杂的。<br>
　　但是，不管脚本如何复杂，它都由三个基本的部份组成。第一，脚本执行的先决条件。这个脚本执行需要什么样的条件呢？是领到某个任务，是杀死某个单位，或是到过某个地方？第二，脚本执行的动作。脚本执行的动作是多种多样的，这取决于脚本系统的能做到什么样的事情。最基本最常见的展开一段剧情对话，或者是由一系列人物表演一系列动作，当然，只要游戏能做到的一切，都可以作为脚本的动作。第三，脚本产生的影响。脚本执行之后，给人物，给这个世界造成什么影响呢？是增加人物的力量？或是直接导致角色死亡？接受到一个新任务？或者完成一个任务？当然，也有可能触发另一个脚本。<br>
　　脚本分为游戏脚本和地图脚本，游戏脚本是在任何情况下，只要触发并且条件满足就可以执行的脚本，而地图脚本则是在指定的地图上才可以执行。通常它需要指定的单位和指定的环境，游戏中的大部份表演都是基于地图的脚本。</p>
<h2 id="font-size4-56ai"><font size=4 ><strong>5.6AI</strong></h2>
<h2 id="font-size4-57插件"><font size=4 ><strong>5.7插件</strong></h2>
<h2 id="font-size4-58构建战斗系统"><font size=4 ><strong>5.8构建战斗系统</strong></h2>
<p>1、发出施放请求<br>
2、验证是否满足使用技能条件<br>
3、返回失败结果或者开始执行技能同时开始动作、特效播放<br>
4、执行该技能需要表现的各项效果<br>
5、如需伤害判定则进行判断并反馈结果</p>
<h2 id="font-size4-59动画系统"><font size=4 ><strong>5.9动画系统</strong></h2>
<h1 id="font-size5-六-游戏美术设计"><font size=5 >六、游戏美术设计</h1>
<h2 id="font-size4-61概念设计2d"><font size=4 ><strong>6.1概念设计2D</strong></h2>
<h3 id="font-size4-611角色概念设计原画立绘"><font size=4 >6.1.1角色概念设计/原画/立绘</h3>
<ul>
<li>人形角色：玩家、NPC</li>
<li>非人形角色/怪物</li>
</ul>
<h3 id="font-size4-612场景概念设计"><font size=4 >6.1.2场景概念设计</h3>
<h2 id="font-size4-62模型3d"><font size=4 ><strong>6.2模型3D</strong></h2>
<ul>
<li>软件：Maya，Blender，Houdini</li>
</ul>
<h2 id="font-size4-63贴图材质"><font size=4 ><strong>6.3贴图&amp;材质</strong></h2>
<h3 id="font-size4-631使用软件"><font size=4 >6.3.1使用软件</h3>
<ul>
<li>Quixel Mixer</li>
<li>Substance Painter</li>
<li>Substance Painter</li>
</ul>
<h3 id="font-size4-632hlsl写shader"><font size=4 >6.3.2HLSL写Shader</h3>
<h3 id="font-size4-633npr效果实现"><font size=4 >6.3.3NPR效果实现</h3>
<h2 id="font-size4-64特效vfx"><font size=4 ><strong>6.4特效VFX</strong></h2>
<h3 id="font-size4-641特效分类"><font size=4 >6.4.1特效分类</h3>
<ul>
<li>技能特效</li>
<li>环境特效</li>
<li>后处理</li>
<li>UI特效</li>
</ul>
<h3 id="font-size4-642cascade"><font size=4 >6.4.2Cascade</h3>
<ul>
<li>
<p>Emitter Type<br>
Beam Data</p>
</li>
<li></li>
<li></li>
</ul>
<h3 id="font-size4-643niagara"><font size=4 >6.4.3Niagara</h3>
<h2 id="font-size4-65地编关卡设计"><font size=4 ><strong>6.5地编/关卡设计</strong></h2>
<h3 id="font-size4-651landscape"><font size=4 >6.5.1Landscape</h3>
<ul>
<li>Houdini高度图</li>
<li>UE4分层编辑地形</li>
<li>刷植被/自动解算材质</li>
</ul>
<h3 id="font-size4-652手工摆放小场景"><font size=4 >6.5.2手工摆放小场景</h3>
<h3 id="font-size4-653程序化生成地牢副本"><font size=4 >6.5.3程序化生成地牢副本</h3>
<ul>
<li>插件：WFC DUNGEON GENERATOR</li>
</ul>
<h3 id="font-size4-654lod"><font size=4 >6.5.4LOD</h3>
<h2 id="font-size4-66动画"><font size=4 ><strong>6.6动画</strong></h2>
<h3 id="font-size4-661animation"><font size=4 >6.6.1Animation</h3>
<h3 id="font-size4-662sequencer"><font size=4 >6.6.2Sequencer</h3>
<h2 id="font-size4-67灯光"><font size=4 ><strong>6.7灯光</strong></h2>
<h2 id="font-size4-69umg"><font size=4 ><strong>6.9UMG</strong></h2>
<h2 id="font-size4-610其他"><font size=4 ><strong>6.10其他</strong></h2>
<ul>
<li>天空球</li>
<li>体积雾</li>
</ul>
<h1 id="font-size5-七-游戏音乐"><font size=5 >七、游戏音乐</h1>
<p>白嫖资源+买资源+找外包</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【TA】PBR核心知识体系总结与概览]]></title>
        <id>https://chongming7406.github.io/lml.github.io/post/ta-pbr-he-xin-zhi-shi-ti-xi-zong-jie-yu-gai-lan/</id>
        <link href="https://chongming7406.github.io/lml.github.io/post/ta-pbr-he-xin-zhi-shi-ti-xi-zong-jie-yu-gai-lan/">
        </link>
        <updated>2020-12-13T07:07:31.000Z</updated>
        <content type="html"><![CDATA[<p><em>基于物理的渲染（PBR）白皮书 毛星云</em></p>
<p><strong>PBR知识体系概览</strong></p>
<ul>
<li>核心PBR理论</li>
<li>渲染方程与BxDF</li>
<li>迪士尼原则的BxDF（Disney Principled BxDF）</li>
<li>漫反射BRDF模型（Diffuse BRDF）</li>
<li>镜面反射BRDF模型（Specular BRDF）</li>
<li>基于物理的环境光照（Physically Based Environment Lighting ）</li>
<li>离线渲染相关（Offline Rendering Related）</li>
<li>进阶渲染主题（Advanced Rendering Topics）</li>
</ul>
<p><strong>一、PBR核心理论与渲染原理</strong></p>
<p><em>基于物理的渲染（Physically Based Rendering，PBR）是指使用基于物理原理和微平面理论建模的着色/光照模型，以及使用从现实中测量的表面参数来准确表示真实世界材质的渲染理念。</em></p>
<ul>
<li>**微平面理论（Microfacet Theory）。**微平面理论是将物体表面建模成做无数微观尺度上有随机朝向的理想镜面反射的小平面（microfacet）的理论。在实际的PBR 工作流中，这种物体表面的不规则性用粗糙度贴图或者高光度贴图来表示。</li>
<li>**能量守恒（Energy Conservation）。**出射光线的能量永远不能超过入射光线的能量。随着粗糙度的上升镜面反射区域的面积会增加，作为平衡，镜面反射区域的平均亮度则会下降。</li>
<li>**菲涅尔反射（Fresnel Reflectance）。**光线以不同角度入射会有不同的反射率。相同的入射角度，不同的物质也会有不同的反射率。万物皆有菲涅尔反射。F0是即 0 度角入射的菲涅尔反射值。大多数非金属的F0范围是0.02<sub>0.04，大多数金属的F0范围是0.7</sub>1.0。</li>
<li>**线性空间（Linear Space）。**光照计算必须在线性空间完成，shader 中输入的gamma空间的贴图比如漫反射贴图需要被转成线性空间，在具体操作时需要根据不同引擎和渲染器的不同做不同的操作。而描述物体表面属性的贴图如粗糙度，高光贴图，金属贴图等必须保证是线性空间。</li>
<li>**色调映射（Tone Mapping）。**也称色调复制（tone reproduction），是将宽范围的照明级别拟合到屏幕有限色域内的过程。因为基于HDR渲染出来的亮度值会超过显示器能够显示最大亮度，所以需要使用色调映射，将光照结果从HDR转换为显示器能够正常显示的LDR。</li>
<li>**物质的光学特性（Substance Optical Properties）。**现实世界中有不同类型的物质可分为三大类：绝缘体（Insulators），半导体（semi-conductors）和导体（conductors）。在渲染和游戏领域，我们一般只对其中的两个感兴趣：导体（金属）和绝缘体（电解质，非金属）。其中非金属具有单色/灰色镜面反射颜色。而金属具有彩色的镜面反射颜色。即非金属的F0是一个float。而金属的F0是一个float3，</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[游戏开发团队部门岗位介绍]]></title>
        <id>https://chongming7406.github.io/lml.github.io/post/you-xi-kai-fa-tuan-dui-bu-men-gang-wei/</id>
        <link href="https://chongming7406.github.io/lml.github.io/post/you-xi-kai-fa-tuan-dui-bu-men-gang-wei/">
        </link>
        <updated>2020-12-12T20:38:37.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://chongming7406.github.io/lml.github.io/post-images/1607805716809.jpg" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[UE4]技能系统——时间静止，潜能爆发，电磁脉冲]]></title>
        <id>https://chongming7406.github.io/lml.github.io/post/ji-neng-xi-tong-shi-jian-jing-zhi-qian-neng-bao-fa-dian-ci-mai-chong/</id>
        <link href="https://chongming7406.github.io/lml.github.io/post/ji-neng-xi-tong-shi-jian-jing-zhi-qian-neng-bao-fa-dian-ci-mai-chong/">
        </link>
        <updated>2020-12-12T16:44:44.000Z</updated>
        <content type="html"><![CDATA[<p>2018UOD虚幻引擎技术开放日技术演讲，P27纯蓝图项目《光明记忆》制作经验分享</p>
<p><strong>技能系统</strong></p>
<p><em><strong>一、时间静止（指定区域内停止AI的时间）</strong></em></p>
<ol>
<li>区域球使用静态模型制作</li>
<li>增加折射材质和其他元素（例：三角形）</li>
<li>蓝图中添加触发器</li>
<li>时间静止逻辑</li>
</ol>
<p>当有角色碰撞到（Custom Event）→检测是否是AI（Branch）→获取当前AI变量→等待特效生成完毕（Daley）→设置时间（减速）倍率</p>
<p><em><strong>二、潜能爆发（LUT/改变游戏音调）</strong></em></p>
<ol>
<li>游戏截图和LUT导入PS，调整色相饱和度</li>
<li>得到调整后的LUT图</li>
<li>UE4中使用Timeline覆盖玩家摄像机LUT</li>
<li>使用Set Sound Mix把音效的Pitch调整到1.5</li>
<li>武器伤害加成</li>
<li>技能释放完毕还原音高</li>
</ol>
<p><em><strong>三、电磁脉冲（AI持续浮空）</strong></em><br>
浮空</p>
<ol>
<li>蓝图中添加触发器,从手套中弹射出的脉冲区域</li>
<li>接触到敌人的触发器 Projectile Tag用于辨识AI</li>
<li>AI触碰到此BP设置重力并执行火箭跳</li>
<li>调用AI模型的物理资源动画Apply Physical Animation</li>
<li>AI浮空后循环检测地面高度</li>
</ol>
<p>滞空</p>
<ol>
<li>当敌人滞空后设置材质参数，添加模型描边<br>
set scaler parameter value on materials</li>
<li>设置重力让AI滞空  Daley 重力0.1</li>
<li>受到伤害后持续浮空，改变Movement模型为Flying</li>
<li>接触到地面取消物理模拟动画，采用timeline 过度</li>
</ol>
]]></content>
    </entry>
</feed>